"""
Django settings for fdcmp project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import logging
import os

import environ
from pathlib import Path

import fdcmp.DBRouter

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(os.path.join(BASE_DIR, '.env.local'))
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['*']


Path(f"{BASE_DIR}/log/mpl/").mkdir(parents=True, exist_ok=True)
Path(f"{BASE_DIR}/log/mcp/").mkdir(parents=True, exist_ok=True)
Path(f"{BASE_DIR}/log/mpl/BrokerLog/").mkdir(parents=True, exist_ok=True)
Path(f"{BASE_DIR}/log/acp/BrokerLog/").mkdir(parents=True, exist_ok=True)
Path(f"{BASE_DIR}/log/capa/").mkdir(parents=True, exist_ok=True)
Path(f"{BASE_DIR}/log/acp/").mkdir(parents=True, exist_ok=True)
Path(f"{BASE_DIR}/log/wRecipeInterLock/").mkdir(parents=True, exist_ok=True)
Path(f"{BASE_DIR}/log/wRecipeInterLock/BrokerLog/").mkdir(parents=True, exist_ok=True)


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(asctime)s %(levelname)s [%(name)s] [%(filename)s:%(lineno)d] - %(message)s',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'mplLog': {
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'when': 'H',
            'backupCount': 240,
            'filename': f'{BASE_DIR}/log/mpl/mplLog.log',
            'formatter': 'verbose'
        },
        'mcpLog': {
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'when': 'H',
            'backupCount': 240,
            'filename': f'{BASE_DIR}/log/mcp/mcpLog.log',
            'formatter': 'verbose'
        },
        'brokerMPLMessageLog': {
            'class': 'logging.handlers.RotatingFileHandler',
            'maxBytes': 1024*1024*10,
            'backupCount': 240,
            'filename': f'{BASE_DIR}/log/mpl/BrokerLog/brokerMPLMessage.log',
            'formatter': 'verbose'
        },
        'brokerACPMessageLog': {
            'class': 'logging.handlers.RotatingFileHandler',
            'maxBytes': 1024*1024*10,
            'backupCount': 240,
            'filename': f'{BASE_DIR}/log/acp/BrokerLog/brokerACPMessage.log',
            'formatter': 'verbose'
        },
        'capaLog': {
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'when': 'H',
            'backupCount': 240,
            'filename': f'{BASE_DIR}/log/capa/capaLog.log',
            'formatter': 'verbose'
        },
        'acpLog': {
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'when': 'H',
            'backupCount': 240,
            'filename': f'{BASE_DIR}/log/acp/acpLog.log',
            'formatter': 'verbose'
        },
        'wRILLog': {
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'when': 'H',
            'backupCount': 240,
            'filename': f'{BASE_DIR}/log/wRecipeInterLock/wRILLog.log',
            'formatter': 'verbose'
        },
        'brokerWRILMessageLog': {
            'class': 'logging.handlers.RotatingFileHandler',
            'maxBytes': 1024*1024*10,
            'backupCount': 240,
            'filename': f'{BASE_DIR}/log/wRecipeInterLock/BrokerLog/brokerWRILMessage.log',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True
        },
        'mpl': {
            'handlers': ['console', 'mplLog'],
            'propagate': False,
            'level': 'INFO',
        },
        'brokerMPLMessage': {
            'handlers': ['brokerMPLMessageLog'],
            'propagate': False,
            'level': 'INFO',
        },
        'brokerACPMessage': {
            'handlers': ['brokerACPMessageLog'],
            'propagate': False,
            'level': 'INFO',
        },
        'mcp': {
            'handlers': ['console', 'mcpLog'],
            'propagate': False,
            'level': 'INFO',
        },
        'capa': {
            'handlers': ['console', 'capaLog'],
            'propagate': False,
            'level': 'INFO',
        },
        'acp': {
            'handlers': ['console', 'acpLog'],
            'propagate': False,
            'level': 'INFO',
        },
        'wRIL': {
            'handlers': ['console', 'wRILLog'],
            'propagate': False,
            'level': 'INFO',
        },
        'brokerWRILMessage': {
            'handlers': ['brokerWRILMessageLog'],
            'propagate': False,
            'level': 'INFO',
        },
        'initEqp': {
            'handlers': ['console', 'mplLog'],
            'propagate': True,
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'WARNING',
    },
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "corsheaders",
    'command',
    'mpl',
    'mcp',
    'capa',
    'acp',
    'wRecipeInterLock'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'fdcmp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fdcmp.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'MPL_DB': {
        'ENGINE': 'djongo',
        'NAME': 'fdc',
        'ENFORCE_SCHEMA': False,
        'CLIENT': {
            'host': env('MCP_DB_HOST'),
            'port': env('MCP_DB_PORT', int),
            'username': env('MCP_DB_USER_NAME'),
            'password': env('MCP_DB_PASS'),
            'authSource': env('MCP_DB_AUTH_SOURCE'),
            'authMechanism': env('MCP_DB_AUTH_MECHANISM')
        },
        'LOGGING': {
            'version': 1,
            'loggers': {
                'djongo': {
                    'level': 'DEBUG',
                    'propagate': False,
                }
            },
            'disable_existing_loggers': False
        },
    }
}

DATABASE_ROUTERS = ['fdcmp.DBRouter.DBRouter']

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [

]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ko-KR'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'fdcmp/static/'

STATIC_ROOT = 'staticfiles/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
